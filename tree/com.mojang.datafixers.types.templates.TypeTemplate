{"findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)":{"com.mojang.datafixers.types.templates.Check":["findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)"],"com.mojang.datafixers.types.templates.Hook":["findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)"],"com.mojang.datafixers.types.templates.Named":["findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)"],"com.mojang.datafixers.types.templates.List":["findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)"],"com.mojang.datafixers.types.templates.Sum":["findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)","lambda$findFieldOrType$3(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$FieldNotFoundException)"],"com.mojang.datafixers.types.templates.Product":["findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)","lambda$findFieldOrType$3(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$FieldNotFoundException)"],"com.mojang.datafixers.types.templates.CompoundList":["findFieldOrType(int, java.lang.String, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)"]},"apply(com.mojang.datafixers.types.families.TypeFamily)":{"com.mojang.datafixers.types.templates.TaggedChoice":["lambda$null$0(com.mojang.datafixers.util.Pair, java.util.Map$Entry)"],"com.mojang.datafixers.types.templates.Check$1":["apply(int)"],"com.mojang.datafixers.types.templates.Hook":["lambda$apply$0(com.mojang.datafixers.types.families.TypeFamily, int)"],"com.mojang.datafixers.types.templates.Tag$1":["apply(int)"],"com.mojang.datafixers.types.templates.Named":["lambda$apply$0(com.mojang.datafixers.types.families.TypeFamily, int)"],"com.mojang.datafixers.types.templates.List$1":["apply(int)"],"com.mojang.datafixers.types.templates.Sum$1":["apply(int)","apply(int)"],"com.mojang.datafixers.types.templates.Product$1":["apply(int)","apply(int)"],"com.mojang.datafixers.schemas.Schema":["buildTypes()"],"com.mojang.datafixers.types.templates.TypeTemplate":["toSimpleType()"],"com.mojang.datafixers.types.templates.CompoundList":["lambda$apply$0(com.mojang.datafixers.types.families.TypeFamily, int)","lambda$apply$0(com.mojang.datafixers.types.families.TypeFamily, int)"],"com.mojang.datafixers.types.families.RecursiveTypeFamily":["lambda$null$1(java.lang.Integer)"]},"applyO(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type)":{"com.mojang.datafixers.types.templates.Check":["lambda$applyO$0(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.templates.Hook":["lambda$applyO$1(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.templates.Named":["lambda$applyO$1(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.templates.List":["lambda$applyO$0(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.templates.Sum":["lambda$applyO$0(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)","lambda$applyO$0(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.templates.Tag":["lambda$applyO$0(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.templates.Product":["lambda$applyO$0(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)","lambda$applyO$0(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.templates.CompoundList":["lambda$applyO$1(com.mojang.datafixers.FamilyOptic, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, int)"],"com.mojang.datafixers.types.families.RecursiveTypeFamily":["lambda$findType$4(int, boolean, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, com.mojang.datafixers.TypedOptic)"]},"hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction)":{"com.mojang.datafixers.types.templates.TaggedChoice":["lambda$hmap$3(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.types.templates.Check":["lambda$hmap$1(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.types.templates.Hook":["lambda$hmap$2(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.types.templates.Named":["lambda$hmap$2(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.types.templates.List":["lambda$hmap$1(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.types.templates.Sum":["lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)","lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.types.templates.Tag":["hmap(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction)"],"com.mojang.datafixers.types.templates.Product":["lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)","lambda$hmap$4(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.types.templates.CompoundList":["lambda$hmap$3(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)","lambda$hmap$3(com.mojang.datafixers.types.families.TypeFamily, java.util.function.IntFunction, int)"],"com.mojang.datafixers.functions.Fold":["lambda$null$0(com.mojang.datafixers.util.Pair)"]},"size()":{"com.mojang.datafixers.types.templates.Check":["size()"],"com.mojang.datafixers.types.templates.Hook":["size()"],"com.mojang.datafixers.types.templates.Named":["size()"],"com.mojang.datafixers.types.templates.List":["size()"],"com.mojang.datafixers.types.templates.Sum":["size()","size()"],"com.mojang.datafixers.types.templates.Tag":["size()"],"com.mojang.datafixers.types.templates.Product":["size()","size()"],"com.mojang.datafixers.types.templates.CompoundList":["size()","size()"],"com.mojang.datafixers.types.families.RecursiveTypeFamily":["<init>()"]}}