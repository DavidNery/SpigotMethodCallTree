{"everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)":{"com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType":["everywhere(com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, boolean)"]},"template()":{"com.mojang.datafixers.functions.Fold":["lambda$null$0()"]},"<init>(java.lang.String, com.mojang.datafixers.types.templates.TypeTemplate)":{"com.mojang.datafixers.schemas.Schema":["buildTypes()"],"com.mojang.datafixers.types.families.RecursiveTypeFamily":["buildMuType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.families.RecursiveTypeFamily)","lambda$findType$4(int, boolean, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, com.mojang.datafixers.TypedOptic)"]},"viewUnchecked(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.functions.PointFree)":{"com.mojang.datafixers.types.families.RecursiveTypeFamily":["everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)","lambda$fold$0(com.mojang.datafixers.types.families.Algebra, int)"]},"findType(int, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean)":{"com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType":["findTypeInChildren(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean)"]},"cap2(java.util.List, com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule, boolean, com.mojang.datafixers.RewriteResult, com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType)":{"com.mojang.datafixers.types.families.RecursiveTypeFamily":["everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)"]},"fold(com.mojang.datafixers.types.families.Algebra)":{"com.mojang.datafixers.functions.PointFreeRule$CataFuseDifferent":["doRewrite(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree)"],"com.mojang.datafixers.functions.PointFreeRule$CataFuseSame":["doRewrite(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.functions.PointFree, com.mojang.datafixers.functions.PointFree)"],"com.mojang.datafixers.types.families.RecursiveTypeFamily":["everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)"],"com.mojang.datafixers.functions.Fold":["lambda$null$0(com.mojang.datafixers.util.Pair)"]},"name()":{"com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType":["toString()"]},"mkSimpleOptic(com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher)":{"com.mojang.datafixers.types.families.RecursiveTypeFamily":["lambda$findType$4(int, boolean, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, com.mojang.datafixers.TypedOptic)"]},"buildMuType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.families.RecursiveTypeFamily)":{"com.mojang.datafixers.types.templates.RecursivePoint":["cap(com.mojang.datafixers.types.families.TypeFamily, com.mojang.datafixers.RewriteResult)"],"com.mojang.datafixers.types.families.RecursiveTypeFamily":["everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)","everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)"]},"mkOptic(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.OpticParts)":{"com.mojang.datafixers.types.families.RecursiveTypeFamily":["lambda$mkSimpleOptic$5(com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType, com.mojang.datafixers.TypedOptic)","lambda$findType$4(int, boolean, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, com.mojang.datafixers.TypedOptic)"]},"apply(int)":{"com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType":["updateMu(com.mojang.datafixers.types.families.RecursiveTypeFamily)"],"com.mojang.datafixers.types.families.RecursiveTypeFamily":["buildMuType(com.mojang.datafixers.types.Type, com.mojang.datafixers.types.families.RecursiveTypeFamily)","findType(int, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, boolean)","everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)","everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)","everywhere(int, com.mojang.datafixers.TypeRewriteRule, com.mojang.datafixers.functions.PointFreeRule)","apply(int)","lambda$findType$4(int, boolean, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, com.mojang.datafixers.TypedOptic)","lambda$findType$4(int, boolean, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type, com.mojang.datafixers.types.Type$TypeMatcher, com.mojang.datafixers.TypedOptic)","lambda$fold$0(com.mojang.datafixers.types.families.Algebra, int)"]},"size()":{"com.mojang.datafixers.functions.PointFreeRule$CataFuseDifferent":["doRewrite()","doRewrite()","doRewrite()","doRewrite()"],"com.mojang.datafixers.functions.PointFreeRule$CataFuseSame":["doRewrite()"]}}